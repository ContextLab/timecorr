
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_simulate_data.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_simulate_data.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_simulate_data.py:


=============================
Simulate subject data
=============================

In this example, we simulate data

.. GENERATED FROM PYTHON SOURCE LINES 10-50



.. image-sg:: /auto_examples/images/sphx_glr_plot_simulate_data_001.png
   :alt: plot simulate data
   :srcset: /auto_examples/images/sphx_glr_plot_simulate_data_001.png
   :class: sphx-glr-single-img





.. code-block:: Python

    # Code source: Lucy Owen
    # License: MIT

    # load timecorr
    import timecorr as tc
    import seaborn as sns
    import matplotlib.pyplot as plt
    import os

    # Configure matplotlib for CI environments
    if os.environ.get('CI') or os.environ.get('GITHUB_ACTIONS'):
        import matplotlib
        matplotlib.use('Agg')  # Use non-interactive backend in CI

    # simulate some data
    data, corrs = tc.simulate_data(datagen='block', return_corrs=True, set_random_seed=True, S=1, T=100, K=10, B=5)

    # calculate correlations  - returned squareformed
    tc_vec_data = tc.timecorr(tc.simulate_data(), weights_function=tc.gaussian_weights, weights_params={'var': 5}, combine=tc.helpers.corrmean_combine)

    # convert from vector to matrix format
    tc_mat_data = tc.vec2mat(tc_vec_data)

    # Helper function to show plots conditionally
    def show_plot():
        """Show plot only in interactive environments, not in CI."""
        if not (os.environ.get('CI') or os.environ.get('GITHUB_ACTIONS')):
            plt.show()

    # plot the 3 correlation matrices different timepoints
    sns.heatmap(tc_mat_data[:, :, 48])
    show_plot()
    plt.clf()
    sns.heatmap(tc_mat_data[:, :, 50])
    show_plot()
    plt.clf()
    sns.heatmap(tc_mat_data[:, :, 52])
    show_plot()
    plt.clf()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.149 seconds)


.. _sphx_glr_download_auto_examples_plot_simulate_data.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_simulate_data.ipynb <plot_simulate_data.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_simulate_data.py <plot_simulate_data.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_simulate_data.zip <plot_simulate_data.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
